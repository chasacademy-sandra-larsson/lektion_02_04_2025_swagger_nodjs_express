openapi: 3.0.0
info:
  title: Instagram clone API
  description: API documentation example
  version: "1.0"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /users:
    post:
      summary: Create a new user
      responses:
        '201':
          description: User created successfully
        '400':
          description: User already exists
        '500':
          description: Internal server error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
              required:
                - email
                - password
              example:
                email: "test@test.com"
                password: "password"
    get:
      summary: Get all users
      responses:
        '200':
          description: Users fetched successfully
        '404':
          description: Users not found
      parameters:
        - name: limit
          in: query
          description: The number of users to fetch
          required: false
          schema: 
            type: number
            example: 10
        - name: page
          in: query
          description: The page number
          required: false 
          schema:
            type: number
            example: 0
        - name: sortOrder
          in: query
          description: The order of the users
          required: false 
          schema:
            type: string
            example: "asc"
        - name: sortBy
          in: query
          description: The field to sort by
          required: false   
          schema:
            type: string
            example: "email"
    tags:
      - users

  /users/{id}:
    get:
      summary: Get a user by ID
      responses:
        '200':
          description: User fetched successfully
        '404':
          description: User not found
        '500':
          description: Internal server error
    parameters:
      - name: id
        in: path  
        description: The ID of the user
        required: true
        schema:
          type: string
          example: "1"

    put:
      summary: Update a user by ID
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
        '500':
          description: Internal server error
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string  
    delete:
      summary: Delete a user by ID
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal server error          
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string      
    tags:
      - users



